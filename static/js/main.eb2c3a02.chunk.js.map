{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","url","FindMovie","addMovie","useState","newMovie","setNewMovie","setTitle","disabled","setDisabled","loadError","setLoadError","isMovieLoaded","setIsMovieLoaded","onSubmit","event","preventDefault","some","htmlFor","type","id","placeholder","name","value","onChange","target","onClick","fetch","then","response","ok","json","Error","status","statusText","getMovie","movieFromServer","Title","Plot","Poster","imdbID","App","data","setMovies","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eb2c3a02.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies = [] }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const BASE_URL = 'https://www.omdbapi.com';\nconst url = `${BASE_URL}/?apikey=106c9773&t=`;\n\nexport const getMovie = title => (\n  fetch(`${url}${title}`)\n    .then(response => (!response.ok\n      ? new Error(`${response.status} - ${response.statusText}`)\n      : response.json()))\n);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/api';\n\nexport const FindMovie = ({ addMovie, movies }) => {\n  const [newMovie, setNewMovie] = useState(null);\n  const [title, setTitle] = useState('');\n  const [disabled, setDisabled] = useState(true);\n  const [loadError, setLoadError] = useState(false);\n  const [isMovieLoaded, setIsMovieLoaded] = useState(false);\n\n  const handleTitle = (event) => {\n    const { value } = event.target;\n\n    if (value !== title) {\n      setLoadError(false);\n      setIsMovieLoaded(false);\n    }\n\n    setTitle(value);\n  };\n\n  const findMovie = () => {\n    getMovie(title)\n      .then((movieFromServer) => {\n        const movie = {\n          title: movieFromServer.Title,\n          description: movieFromServer.Plot,\n          imgUrl: movieFromServer.Poster,\n          imdbUrl: `https://www.imdb.com/title/${movieFromServer.imdbId}`,\n          imdbId: movieFromServer.imdbID,\n        };\n\n        if (!movie.imdbId) {\n          setLoadError(true);\n        } else {\n          setNewMovie(movie);\n          setDisabled(false);\n        }\n      });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (!movies.some(movie => movie.imdbId === newMovie.imdbId)) {\n      addMovie(newMovie);\n      setNewMovie(null);\n      setTitle('');\n      setDisabled(true);\n    } else {\n      setIsMovieLoaded(true);\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input\"\n              name=\"value\"\n              value={title}\n              onChange={handleTitle}\n            />\n          </div>\n\n          {loadError && (\n            <p className=\"help is-danger\">\n              Movie not found\n            </p>\n          )}\n          {isMovieLoaded && (\n            <p className=\"help is-danger\">\n              Movie already has been added\n            </p>\n          )}\n\n        </div>\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n              disabled={disabled}\n            >\n              Add\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {newMovie && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard {...newMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n  movies: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    imgUrl: PropTypes.string.isRequired,\n    imdbUrl: PropTypes.string.isRequired,\n  }).isRequired).isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addMovie = (newMovie) => {\n    setMovies(currentMovies => [...currentMovies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          addMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}